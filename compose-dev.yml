gateway:
  build: MedBook-Gateway
  container_name: "gateway"
  ports:
   - "8000:10000"
  volumes:
   - ./MedBook-Gateway:/app-dev
  command: /app-dev/runDev.sh

telescope:
  container_name: "telescope"
  build: MedBook-Telescope3
  volumes:
  - ./MedBook-Telescope3:/app-dev
  command: /app-dev/dockerDev.sh

fusion:
  build: MedBook-Fusion5
  volumes:
  - ./MedBook-Fusion5/webapp:/app-dev
  container_name: fusion
  command: /app-dev/dockerDev.sh
  environment:
    ROOT_URL: ${ROOT_URL}/fusion

crfs:
  build: MedBook-CRFS
  container_name: "crfs"
  volumes:
  - ./MedBook-CRFS/webapp:/app-dev
  command: /app-dev/dockerDev.sh
  environment:
    ROOT_URL: ${ROOT_URL}/CRF

wrangler:
  build: Medbook-Wrangler
  container_name: "wrangler"
  volumes:
  - ./MedBook-Wrangler/webapp:/app-dev
  command: /app-dev/dockerDev.sh
  environment:
    ROOT_URL: ${ROOT_URL}/wrangler

job-runnner:
  build: Medbook-JobRunner
  container_name: "job-runner"
  volumes:
  - ./MedBook-JobRunner/webapp:/app-dev
  command: /app-dev/dockerDev.sh
  environment:
    ROOT_URL: ${ROOT_URL}/job-runner

# patient-care:
#   build: MedBook-PatientCare
#   container_name: "patientCare"
#   volumes:
#     - ./MedBook-PatientCare/webapp:/app-dev
#   command: /app-dev/dockerDev.sh
#   environment:
#     ROOT_URL: ${ROOT_URL}/patientCare

workbench:
  build: MedBook-Workbench
  container_name: "workbench"
  volumes:
    - ./MedBook-Workbench:/app-dev
  command: /app-dev/dockerDev.sh
  environment:
    ROOT_URL: ${ROOT_URL}/workbench

# cron:
#   build: MedBook-Cron
#   container_name: "cron"
#   volumes:
#     - ./MedBoook-Cron
#   command: /app-dev/dockerDev.sh
#   environment:
#     ROOT_URL: ${ROOT_URL}/cron

##TODO should probably pin down the version of Mongo
mongo:
  container_name: "mongo"
  image: mongo:2.6.11

  # uncomment when you want to talk directly to moongo
  # from outside a container
  # ports:
  #   - "127.0.0.1:27017:27017"
